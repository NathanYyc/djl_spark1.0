import groovy.xml.QName

group "ai.djl.ml.xgboost"

configurations {
    exclusion
}

dependencies {
    api project(":api")
    api "commons-logging:commons-logging:${commons_logging_version}"
    api("ml.dmlc:xgboost4j_2.12:${xgboost_version}") {
        // get rid of the unused XGBoost Dependencies
        exclude group: "org.apache.hadoop", module: "hadoop-hdfs"
        exclude group: "org.apache.hadoop", module: "hadoop-common"
        exclude group: "junit", module: "junit"
        exclude group: "com.typesafe.akka", module: "akka-actor_2.12"
        exclude group: "com.typesafe.akka", module: "akka-testkit_2.12"
        exclude group: "com.esotericsoftware", module: "kryo"
        exclude group: "org.scalatest", module: "scalatest_2.12"
        exclude group: "org.scala-lang.modules", module: "scala-java8-compat_2.12"
        exclude group: "org.scala-lang", module: "scala-compiler"
        exclude group: "org.scala-lang", module: "scala-reflect"
        exclude group: "org.scala-lang", module: "scala-library"
    }

    exclusion project(":api")
    exclusion "commons-logging:commons-logging:${commons_logging_version}"
    testImplementation("org.testng:testng:${testng_version}") {
        exclude group: "junit", module: "junit"
    }

    testRuntimeOnly "org.slf4j:slf4j-simple:${slf4j_version}"
}

jar {
    from {
        (configurations.compileClasspath - configurations.exclusion).collect {
            it.isDirectory() ? [] : zipTree(it).matching {
                include "lib/**",
                        "ml/dmlc/xgboost4j/java/DMatrix*",
                        "ml/dmlc/xgboost4j/java/NativeLibLoader.*",
                        "ml/dmlc/xgboost4j/java/XGBoost*",
                        "ml/dmlc/xgboost4j/java/util/*",
                        "ml/dmlc/xgboost4j/LabeledPoint.*",
                        "xgboost4j-version.properties"
            }
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            pom {
                name = "DJL Engine Adapter for XGBoost"
                description = "Deep Java Library (DJL) Engine Adapter for XGBoost"
                url = "https://djl.ai/ml/${project.name}"

                withXml {
                    Node pomNode = asNode()
                    pomNode.dependencies."*".findAll() {
                        it.artifactId.text().startsWith("xgboost")
                    }.each() {
                        it.parent().remove(it)
                    }
                }
            }
        }
    }
}
